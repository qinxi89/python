
1、日志的概念
日志是一种可以追踪某些软件运行时所发生事件的方法。软件开发人员可以向他们的代码中调用日志记录相关的方法来表明发生了某些事情。
一个事件可以用一个可包含可选变量数据的消息来描述。此外，事件也有重要性的概念，这个重要性也可以被称为严重性级别（level）。

2、日志的作用
通过log的分析，可以方便用户了解系统或软件、应用的运行情况；如果你的应用log足够丰富，也可以分析以往用户的操作行为、类型喜好、地域分布或其他更多信息；
如果一个应用的log同时也分了多个级别，那么可以很轻易地分析得到该应用的健康状况，及时发现问题并快速定位、解决问题，补救损失。
日志的作用可以简单总结为以下3点：
程序调试
了解软件程序运行情况，是否正常
软件程序运行故障分析与问题定位

3、日志字段信息与日志格式
一条日志信息对应的是一个事件的发生，而一个事件通常需要包括以下几个内容：

事件发生时间

事件发生位置

事件的严重程度--日志级别

事件内容

上面这些都是一条日志记录中可能包含的字段信息，当然还可以包括一些其他信息，如进程ID、进程名称、线程ID、线程名称等。日志格式就是用来定义一条日志记录中包含那些字段的，且日志格式通常都是可以自定义的。

4、logging 模块日志的等级
日志等级（level）                     	描述
 DEBUG	                      最详细的日志信息，典型应用场景是 问题诊断
 INFO	                      信息详细程度仅次于DEBUG，通常只记录关键节点信息，用于确认一切都是按照我们预期的那样进行工作
 WARNING	                    当某些不期望的事情发生时记录的信息（如，磁盘可用空间较低），但是此时应用程序还是正常运行的
 ERROR	                      由于一个更严重的问题导致某些功能不能正常运行时记录的信息
 CRITICAL	                  当发生严重错误，导致应用程序不能继续运行时记录的信息


5、logging 模块的使用方式介绍

6、日志的简单配置

7、日志流处理流程



























