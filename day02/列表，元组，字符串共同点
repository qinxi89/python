list() 把一个可迭代对象转换成列表。
list方法：
   append(...)
       L.append(object) -> None -- append object to end
 
   clear(...)
       L.clear() -> None -- remove all items from L
 
   copy(...)
       L.copy() -> list -- a shallow copy of L
 
  count(...)
       L.count(value) -> integer -- return number of occurrences of value
 
   extend(...)
       L.extend(iterable) -> None -- extend list by appending elements from the iterable
 
   index(...)
       L.index(value, [start, [stop]]) -> integer -- return first index of value.
       Raises ValueError if the value is not present.
 
   insert(...)
       L.insert(index, object) -- insert object before index
 
   pop(...)
       L.pop([index]) -> item -- remove and return item at index (default last).
       Raises IndexError if list is empty or index is out of range.
 
   remove(...)
       L.remove(value) -> None -- remove first occurrence of value.
       Raises ValueError if the value is not present.
 
   reverse(...)
       L.reverse() -- reverse *IN PLACE*
 
   sort(...)
       L.sort(key=None, reverse=False) -> None -- stable sort *IN PLACE


-----------------------------------------这是分割线-----------------------------------------------------
tuple([iterable]) 把一个可迭代对象转换为元组

#将字符串内容转化为列表
a = 'I love miyaaaa'

b = list(a)
print(b)              #输出内容：['I', ' ', 'l', 'o', 'v', 'e', ' ', 'm', 'i', 'y', 'a', 'a', 'a', 'a']

#返回列表元素长度
l = len(b)
print(l)            #output： 14





################# max 和 min方法 ######################
使用max和min方法，数据类型必须一致
max()   返回序列或者参数集合中的最大值
min()   返回序列或者参数集合中的最小值

i = min(1,4,7,10,50,6,2)
t = max(1,4,7,10,50,6,2)    #元组
print(t)        #output:   50
print(i)        #output:   1

numbers = [-2,9,34,0,1,98,3]   #列表
s = max(numbers)
i = min(numbers)
print(s)         #output: 98
print(i)         #outout: -2

#sum     返回元素的和
numbers = [-2,9,34,0,1,98,3]   #列表
s = sum(numbers)
print(s)                #output: 143        返回列表元素的总和

t = sum(numbers,-3)
print(t)                #output: 140
#sort 从小到大排序
p = sorted(numbers)
print(p)               #output:  [-2, 0, 1, 3, 9, 34, 98]

#reversed 逆序，从后往前排序
r = reversed(numbers)
print(r)          #output: <list_reverseiterator object at 0x1032a8fd0> 返回迭代器对象，可以通过list()转换为列表
r1 = list(reversed(numbers))
print(r1)         #output:[3, 98, 1, 0, 34, 9, -2]



-----------------------------------------这是分割线-----------------------------------------------------
enumerate() 函数用于将一个可遍历的数据对象(如列表、元组或字符串)组合为一个索引序列，同时列出数据和数据下标，一般用在 for 循环当中。

#enumerate

numbers = [-2,9,34,0,1,98,3]
n = enumerate(numbers)
print(n)       #output:   <enumerate object at 0x1033100d8> 迭代器对象
n1 = list(enumerate(numbers))
print(n1)      #output:    [(0, -2), (1, 9), (2, 34), (3, 0), (4, 1), (5, 98), (6, 3)]

#zip() 函数用于将可迭代的对象作为参数，将对象中对应的元素打包成一个个元组，然后返回由这些元组组成的列表。如果各个迭代器的元素个数不一致，则返回列表长度与最短的对象相同，利用 * 号操作符，可以将元组解压为列表。
a = [1,2,3,4,5,7,8]
b = [8,4,6]
c = list(zip(a,b))
print(c)        #output:     [(1, 8), (2, 4), (3, 6)]










